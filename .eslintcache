[{"C:\\Users\\HS\\Desktop\\love\\src\\index.js":"1","C:\\Users\\HS\\Desktop\\love\\src\\App.jsx":"2","C:\\Users\\HS\\Desktop\\love\\src\\router\\index.js":"3","C:\\Users\\HS\\Desktop\\love\\src\\views\\login\\login.jsx":"4","C:\\Users\\HS\\Desktop\\love\\src\\views\\404\\404.jsx":"5","C:\\Users\\HS\\Desktop\\love\\src\\views\\home\\home.jsx":"6","C:\\Users\\HS\\Desktop\\love\\src\\views\\layouts\\layouts.jsx":"7","C:\\Users\\HS\\Desktop\\love\\src\\components\\navSide\\navSide.jsx":"8","C:\\Users\\HS\\Desktop\\love\\src\\components\\navHeader\\navHeader.jsx":"9","C:\\Users\\HS\\Desktop\\love\\src\\store\\index.js":"10","C:\\Users\\HS\\Desktop\\love\\src\\store\\reducers\\user\\user.js":"11","C:\\Users\\HS\\Desktop\\love\\src\\store\\actions\\user\\user.js":"12","C:\\Users\\HS\\Desktop\\love\\src\\http\\api.js":"13","C:\\Users\\HS\\Desktop\\love\\src\\http\\index.js":"14","C:\\Users\\HS\\Desktop\\love\\src\\views\\users\\users.jsx":"15","C:\\Users\\HS\\Desktop\\love\\src\\views\\rights\\roles.jsx":"16","C:\\Users\\HS\\Desktop\\love\\src\\views\\rights\\rights.jsx":"17","C:\\Users\\HS\\Desktop\\love\\src\\views\\goods\\goods.jsx":"18","C:\\Users\\HS\\Desktop\\love\\src\\views\\goods\\params.jsx":"19","C:\\Users\\HS\\Desktop\\love\\src\\views\\goods\\categories.jsx":"20","C:\\Users\\HS\\Desktop\\love\\src\\views\\orders\\orders.jsx":"21","C:\\Users\\HS\\Desktop\\love\\src\\views\\reports\\reports.jsx":"22","C:\\Users\\HS\\Desktop\\love\\src\\store\\reducers\\rights\\rights.js":"23","C:\\Users\\HS\\Desktop\\love\\src\\store\\actions\\rights\\rights.js":"24","C:\\Users\\HS\\Desktop\\love\\src\\store\\reducers\\orders\\orders.js":"25","C:\\Users\\HS\\Desktop\\love\\src\\store\\actions\\orders\\orders.js":"26","C:\\Users\\HS\\Desktop\\love\\src\\store\\reducers\\data\\data.js":"27","C:\\Users\\HS\\Desktop\\love\\src\\store\\actions\\data\\data.js":"28","C:\\Users\\HS\\Desktop\\love\\src\\store\\reducers\\goods\\goods.js":"29","C:\\Users\\HS\\Desktop\\love\\src\\store\\actions\\goods\\goods.js":"30","C:\\Users\\HS\\Desktop\\love\\src\\hooks\\useWatch.js":"31","C:\\Users\\HS\\Desktop\\love\\src\\hooks\\useStorage.js":"32","C:\\Users\\HS\\Desktop\\love\\src\\hooks\\useComputed.js":"33"},{"size":650,"mtime":1611799223176,"results":"34","hashOfConfig":"35"},{"size":1594,"mtime":1611223798126,"results":"36","hashOfConfig":"35"},{"size":2918,"mtime":1611308658986,"results":"37","hashOfConfig":"35"},{"size":2919,"mtime":1611476505798,"results":"38","hashOfConfig":"35"},{"size":1190,"mtime":1611376975069,"results":"39","hashOfConfig":"35"},{"size":461,"mtime":1611388728258,"results":"40","hashOfConfig":"35"},{"size":1443,"mtime":1611388041756,"results":"41","hashOfConfig":"35"},{"size":2604,"mtime":1611908263116,"results":"42","hashOfConfig":"35"},{"size":5322,"mtime":1612076380004,"results":"43","hashOfConfig":"35"},{"size":887,"mtime":1611802455567,"results":"44","hashOfConfig":"35"},{"size":1791,"mtime":1611648744534,"results":"45","hashOfConfig":"35"},{"size":4363,"mtime":1611739792074,"results":"46","hashOfConfig":"35"},{"size":4061,"mtime":1611827626285,"results":"47","hashOfConfig":"35"},{"size":1617,"mtime":1611287856708,"results":"48","hashOfConfig":"35"},{"size":13370,"mtime":1611800235216,"results":"49","hashOfConfig":"35"},{"size":7872,"mtime":1611736958901,"results":"50","hashOfConfig":"35"},{"size":1373,"mtime":1611911271288,"results":"51","hashOfConfig":"35"},{"size":7847,"mtime":1611826636608,"results":"52","hashOfConfig":"35"},{"size":2825,"mtime":1612099114327,"results":"53","hashOfConfig":"35"},{"size":2259,"mtime":1612103908329,"results":"54","hashOfConfig":"35"},{"size":4020,"mtime":1611828113154,"results":"55","hashOfConfig":"35"},{"size":494,"mtime":1611805112151,"results":"56","hashOfConfig":"35"},{"size":756,"mtime":1611736818145,"results":"57","hashOfConfig":"35"},{"size":2383,"mtime":1611744657216,"results":"58","hashOfConfig":"35"},{"size":436,"mtime":1611744411938,"results":"59","hashOfConfig":"35"},{"size":754,"mtime":1611826919635,"results":"60","hashOfConfig":"35"},{"size":430,"mtime":1611800132348,"results":"61","hashOfConfig":"35"},{"size":667,"mtime":1611804783807,"results":"62","hashOfConfig":"35"},{"size":583,"mtime":1611828052334,"results":"63","hashOfConfig":"35"},{"size":1928,"mtime":1611881764810,"results":"64","hashOfConfig":"35"},{"size":239,"mtime":1612078118271,"results":"65","hashOfConfig":"35"},{"size":1591,"mtime":1612097327508,"results":"66","hashOfConfig":"35"},{"size":123,"mtime":1612098866853,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"x509i7",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HS\\Desktop\\love\\src\\index.js",[],["149","150"],"C:\\Users\\HS\\Desktop\\love\\src\\App.jsx",[],"C:\\Users\\HS\\Desktop\\love\\src\\router\\index.js",[],"C:\\Users\\HS\\Desktop\\love\\src\\views\\login\\login.jsx",[],"C:\\Users\\HS\\Desktop\\love\\src\\views\\404\\404.jsx",[],"C:\\Users\\HS\\Desktop\\love\\src\\views\\home\\home.jsx",[],"C:\\Users\\HS\\Desktop\\love\\src\\views\\layouts\\layouts.jsx",[],"C:\\Users\\HS\\Desktop\\love\\src\\components\\navSide\\navSide.jsx",["151","152"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux' //useSelector用以拿到值\r\nimport { getMenus } from '../../store/actions/user/user'\r\nimport { Menu } from 'antd'\r\nimport * as Icons from '@ant-design/icons' //引入全部图标\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nconst NavSide = () => {\r\n  let dispatch = useDispatch() // 提交action\r\n  let location = useLocation()\r\n  let history = useHistory()\r\n  // 拿到当前路由的路径\r\n  let pathname = location.pathname\r\n  // 拿到父级菜单的路径\r\n  let subPath = pathname.split('/')[1]\r\n\r\n  let menus = useSelector(state => state.user.menus)  //拿到值\r\n  // 动态渲染图标  非常重要\r\n  let renderIcon = (name) => {\r\n    return React.createElement(Icons && Icons[name], {\r\n      style: {\r\n        fontSize: '16px'\r\n      }\r\n    })\r\n  } //图标\r\n  // 递归渲染侧边栏  非常重要\r\n  let renderMenu = (data) => {\r\n    return data.map(item => {\r\n      if (item.children && item.children.length) {\r\n        return (\r\n          <SubMenu icon={renderIcon(item.icon)} title={item.authName} key={item.path}>\r\n            {\r\n              renderMenu(item.children)\r\n            }\r\n          </SubMenu>\r\n        )\r\n      }\r\n      return (\r\n        <Menu.Item icon={renderIcon(item.icon)} title={item.authName} item={item} key={item.key}>\r\n          {\r\n            item.authName\r\n          }\r\n        </Menu.Item>\r\n      )\r\n    })\r\n  }\r\n  //声明数组\r\n  // let ary =[{name:'首页',path:'/'}]\r\n  // sessionStorage.setItem('arr',JSON.stringify(ary))\r\n\r\n  // 点击菜单\r\n  let clickItem = (item) => {\r\n    history.push(item.key) // 跳路由\r\n    if (sessionStorage.getItem('arr') === null) {\r\n      let arr = [{ name: '首页', path: '/' }]\r\n      sessionStorage.setItem('arr', JSON.stringify(arr))\r\n    } else {\r\n      let arr = JSON.parse(sessionStorage.getItem('arr'))\r\n      let obj = {}\r\n      obj.name = item.item.props.item.authName\r\n      obj.path = item.key\r\n      let flag = arr.some(item => {\r\n        return item.name === obj.name\r\n      }) //数组去重\r\n      if (!flag) {\r\n        arr.push(obj)\r\n        sessionStorage.setItem('arr', JSON.stringify(arr))\r\n      }//数组去重\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    dispatch(getMenus())\r\n  }, [])\r\n  return (\r\n    <Menu\r\n      mode=\"inline\"\r\n      theme='light'\r\n      defaultSelectedKeys={[pathname]}\r\n      defaultOpenKeys={[subPath]}\r\n      onClick={clickItem}>\r\n      {\r\n        renderMenu(menus)\r\n      }\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default NavSide","C:\\Users\\HS\\Desktop\\love\\src\\components\\navHeader\\navHeader.jsx",["153","154"],"import React, { useState, useEffect } from 'react'\r\nimport dayjs from 'dayjs'\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n} from '@ant-design/icons';\r\nimport { Layout } from 'antd';\r\nconst { Header } = Layout;\r\n\r\nconst NavHeader = (props) => {\r\n    let toggle = () => {\r\n        props.toggle(!props.collapsed)  //改变父组件的值\r\n    }\r\n    let [hello, setHello] = useState('早上好')\r\n    let [time, setTime] = useState(dayjs().format(`YYYY-MM-DD  HH:mm:ss`))\r\n    let [username, setUsername] = useState()\r\n    // 获取当前时间\r\n    useEffect(() => {\r\n        if (dayjs().hour() > 6 && dayjs().hour() <= 12) {\r\n            setHello('早上好')\r\n        } else if (dayjs().hour() > 12 && dayjs().hour() <= 14) {\r\n            setHello('中午好')\r\n        } else if (dayjs().hour() > 14 && dayjs().hour() <= 18) {\r\n            setHello('下午好')\r\n        } else if (dayjs().hour() > 18 && dayjs().hour() <= 23) {\r\n            setHello('晚上好')\r\n        } else {\r\n            setHello('食屎啦你还不睡觉')\r\n        }\r\n        let timer = setInterval(() => {\r\n            setTime(dayjs().format(`YYYY-MM-DD ${hello} HH:mm:ss`))\r\n        }, 1000)\r\n        //  取出存在localStorage中的用户名\r\n        setUsername(JSON.parse(localStorage.getItem('username')).username)\r\n        return () => {\r\n            clearInterval(timer)\r\n        }\r\n    }, [hello])\r\n\r\n    let [arrs, setarrs] = useState([])\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem('arr') === null) {\r\n            let arr = [{ name: '首页', path: '/' }]\r\n            setarrs(arr)\r\n            sessionStorage.setItem('arr', JSON.stringify(arr))\r\n        } else {\r\n            setarrs(JSON.parse(sessionStorage.getItem('arr')))\r\n        }\r\n\r\n    }, []) //重要\r\n\r\n\r\n\r\n    //点击上面标签===========================================================================\r\n    let [flag, setFlag] = useState('0')\r\n    let handle = (item, index) => {\r\n        console.log(item);\r\n        setFlag(index)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header className=\"site-layout-background\"\r\n                style={{\r\n                    padding: '0 20px',\r\n                    background: '#fff',\r\n                    position: 'fixed',\r\n                    zIndex: 1,\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexWrap: \"wrap\",\r\n                }}>\r\n                <div>\r\n                    {\r\n                        props.collapsed ? <MenuUnfoldOutlined onClick={toggle} /> : <MenuFoldOutlined onClick={toggle} />  //第二种办法\r\n                    }\r\n                </div>\r\n                <div style={{\r\n                    marginLeft: '20px',\r\n                    color: '#685E85'\r\n                }}>欢迎来到小爱后台系统</div>\r\n\r\n                {/* 时间 */}\r\n                <div style={{\r\n                    marginLeft: '600px',\r\n                    color: '#685E85'\r\n                }}>{time}</div>\r\n                {/* 天气 */}\r\n                <div style={{\r\n                    margin: '0 20px',\r\n                }}>\r\n                    <div className=\"weather ml20\" style={{ border: 'none' }}>\r\n                        <iframe\r\n                            width=\"400\"\r\n                            height=\"26\"\r\n                            frameBorder=\"0\"\r\n                            scrolling=\"no\"\r\n                            hspace=\"0\"\r\n                            src=\"https://i.tianqi.com/?c=code&a=getcode&id=40&icon=1\"\r\n                        ></iframe>\r\n                    </div>\r\n                </div>\r\n                {/* 欢迎 */}\r\n                <div>亲爱的<span style={{\r\n                    color: '#685E85'\r\n                }}>{username}</span></div>\r\n                {/* 退出 */}\r\n                <div style={{\r\n                    margin: '0 0 0 20px',\r\n                    color: '#409EFF',\r\n                    cursor: 'pointer',\r\n                }}>退出</div>\r\n            </Header>\r\n            <div style={{\r\n                position: 'absolute',\r\n                top: 64,\r\n                left: 200,\r\n                height: 70,\r\n                lineHeight: \"70px\",\r\n                width: \"calc(100% - 200px)\",\r\n                zIndex: 5,\r\n                border: '1px solid #F0F2F5',\r\n                borderBottom: 'none',\r\n                display: 'flex',\r\n            }}>\r\n                {\r\n                    arrs.map((item, index) => {\r\n                        return (\r\n                            <div key={index} onClick={() => handle(item)}>\r\n                                <span style={{\r\n                                    border: '1px solid #ddd',\r\n                                    marginLeft: '30px',\r\n                                    padding: ' 0 2px',\r\n                                }}>\r\n                                  {/* flag===index ?  <span >11</span>{item.name} <span>22</span> \r\n                                  :<span style={{ display: 'none' }}>11</span>{item.name} < span style={{ display: 'none' }}>22</span> */}\r\n                                </span>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default NavHeader","C:\\Users\\HS\\Desktop\\love\\src\\store\\index.js",[],"C:\\Users\\HS\\Desktop\\love\\src\\store\\reducers\\user\\user.js",[],"C:\\Users\\HS\\Desktop\\love\\src\\store\\actions\\user\\user.js",["155","156","157","158","159"],"import api from '../../../http/api'\r\nimport { message } from 'antd'\r\nimport { authRoutes, parentRoutes } from '../../../router'\r\n\r\n\r\n//导出多个方法\r\nexport function login(params) {\r\n    //发请求\r\n    return async(dispatch) => {\r\n        let res = await api.login(params)\r\n        if (res.meta.status === 200) {\r\n            localStorage.setItem('token', res.data.token)\r\n            localStorage.setItem('username', JSON.stringify(res.data))\r\n            window.location.pathname = \"/\" //跳路由  会刷新页面\r\n            message.success('登陆成功')\r\n                //提交reducers\r\n            dispatch({\r\n                type: 'login'\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\n//侧边栏请求===========================================================================\r\nexport function getMenus() {\r\n    return async dispatch => {\r\n        let res = await api.getMenus()\r\n        if (res.meta.status === 200) {\r\n            res.data.map(item => {\r\n                parentRoutes.map(item1 => {\r\n                    if (item1.path === ('/' + item.path)) {\r\n                        item.icon = item1.icon\r\n                    }\r\n                })\r\n                if (item.children && item.children.length) {\r\n                    item.children.map(child => {\r\n                        authRoutes.map(item2 => {\r\n                            if ((`/${item.path}/${child.path}`) === item2.path) {\r\n                                child.icon = item2.meta.icon\r\n                                child.key = `/${item.path}/${child.path}`\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n            res.data.unshift({\r\n                path: '/',\r\n                key: '/',\r\n                authName: '首页',\r\n                icon: 'HomeOutlined'\r\n            })\r\n            return dispatch({\r\n                type: 'getMenus',\r\n                data: res.data\r\n            })\r\n        }\r\n    }\r\n}\r\n//用户数据列表============================================================================\r\nexport function getUsers(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.getUsers(params)\r\n        if (res.meta.status === 200) {\r\n            res.data.users.map((item, index) => {\r\n                item.key = index + 1\r\n            })\r\n            console.log(res.data);\r\n            return dispatch({\r\n                type: 'getUsers',\r\n                data: res.data\r\n            })\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}\r\n\r\n//修改用户状态================================================================\r\nexport function modifyUsers(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.modifyUsers(params)\r\n        if (res.meta.status === 200) {\r\n            message.success(res.meta.msg)\r\n            return dispatch({\r\n                type: 'modifyUsers',\r\n            })\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}\r\n//删除单个用户================================================================\r\nexport function delUser(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.delUser(params)\r\n        if (res.meta.status === 200) {\r\n            message.success(res.meta.msg)\r\n            return dispatch(getUsers(params))\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}\r\n//添加单个用户==================================================================\r\nexport function addUser(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.addUser(params)\r\n        if (res.meta.status === 201) {\r\n            message.success(res.meta.msg)\r\n            console.log(res.data)\r\n            return dispatch(getUsers(params))\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}\r\n//编辑单个用户==================================================================\r\nexport function editUser(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.editUser(params)\r\n        if (res.meta.status === 200) {\r\n            console.log(res.data)\r\n            message.success(res.meta.msg)\r\n            return dispatch({\r\n                type: 'editUser'\r\n            })\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}","C:\\Users\\HS\\Desktop\\love\\src\\http\\api.js",["160"],"import http from './index'\r\nexport default {\r\n    //登录====================================================================\r\n    login({ username, password }) {\r\n        return http.post('login', {\r\n            username,\r\n            password\r\n        })\r\n    },\r\n    //左侧菜单===================================================================\r\n    getMenus() {\r\n        return http.get('menus')\r\n    },\r\n    //获得用户数据列表=================================================================\r\n    getUsers({ query, pagenum, pagesize }) {\r\n        if (query) {\r\n            return http.get(`/users?pagenum=${pagenum}&pagesize=${pagesize}&query=${query}`)\r\n        } else {\r\n            return http.get(`/users?pagenum=${pagenum}&pagesize=${pagesize}`)\r\n        }\r\n    },\r\n    //修改用户状态===========================================================================\r\n    modifyUsers({ uId, type }) {\r\n        return http.put(`users/${uId}/state/${type}`)\r\n    },\r\n    //添加用户=========================================================================\r\n    addUser({ username, password, email, mobile }) {\r\n        if (email || mobile) {\r\n            return http.post(\"users\", {\r\n                username,\r\n                password,\r\n                email,\r\n                mobile\r\n            })\r\n        } else {\r\n            return http.post(\"users\", {\r\n                username,\r\n                password,\r\n            })\r\n        }\r\n    },\r\n    //编辑单个用户=======================================================================\r\n    editUser({ id, email, mobile }) {\r\n        if (email || mobile) {\r\n            return http.put(`users/${id}`, { email, mobile })\r\n        } else {\r\n            return http.put(`users/${id}`)\r\n        }\r\n    },\r\n    //删除单个用户=======================================================================\r\n    delUser({ id }) {\r\n        return http.delete(`users/${id}`)\r\n    },\r\n\r\n\r\n    //获取角色列表===============================================================\r\n    getroles() {\r\n        return http.get(`roles`)\r\n    },\r\n    //添加角色===================================================================\r\n    addRoles({ roleName, roleDesc }) {\r\n        return http.post('roles', {\r\n            roleName,\r\n            roleDesc\r\n        })\r\n    },\r\n    //删除角色==================================================================\r\n    delRole({ id }) {\r\n        return http.delete(`roles/${id}`)\r\n    },\r\n    //编辑角色==================================================================\r\n    editRole({ id, roleName, roleDesc }) {\r\n        return http.put(`roles/${id}`, { roleName, roleDesc })\r\n    },\r\n\r\n    //获得权限列表=============================================================\r\n    getPower({ type }) {\r\n        return http.get(`rights/${type}`)\r\n    },\r\n    //获取商品列表======================================================================\r\n    getGoods({ query, pagenum, pagesize }) {\r\n        return http.get(`goods?query=${query}&pagenum=${pagenum}&pagesize=${pagesize}`)\r\n    },\r\n    //删除商品=======================================================================\r\n    delGoods({ id }) {\r\n        return http.delete(`goods/${id}`)\r\n    },\r\n    //--------------------------------------------------------------------------------------------------\r\n    //商品分类\r\n    goodsList({ type, pagenum, pagesize }) {\r\n        if (pagenum && pagesize) {\r\n            return http.get(`categories?type=${type}&pagenum=${pagenum}&pagesize=${pagesize}`)\r\n        } else {\r\n            return http.get(`categories?type=${type}`)\r\n        }\r\n    },\r\n    //获取订单列表======================================================================\r\n    getOrder({ query, pagenum, pagesize, }) {\r\n        return http.get(`orders?query=${query}&pagenum=${pagenum}&pagesize=${pagesize}`)\r\n    },\r\n    //基于时间统计的折线图==============================================\r\n    getData() {\r\n        return http.get(`reports/type/1`)\r\n    }\r\n}","C:\\Users\\HS\\Desktop\\love\\src\\http\\index.js",[],"C:\\Users\\HS\\Desktop\\love\\src\\views\\users\\users.jsx",["161","162"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUsers, modifyUsers, delUser, addUser, editUser } from '../../store/actions/user/user'\r\nimport { Card, Input, Space, Button, Table, Switch, Popconfirm, message, Modal, Form, } from 'antd';\r\nimport { EditOutlined, DeleteOutlined, SettingOutlined } from '@ant-design/icons'\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst Users = () => {\r\n\r\n    const layout = {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 20 },\r\n    };\r\n\r\n    let dispatch = useDispatch()\r\n    let users = useSelector(state => state.user.users)\r\n    let [ids, setIds] = useState('')\r\n    let [pagenum] = useState('1')\r\n    let [pagesize] = useState('5')\r\n    let [query] = useState('')\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers({ pagenum, pagesize, query }))\r\n    }, [])\r\n    //搜索框中的值===============================================================\r\n    const onSearch = (value) => {\r\n        dispatch(getUsers({\r\n            pagenum,\r\n            pagesize,\r\n            query: value\r\n        }))\r\n    };\r\n\r\n    //添加用户============================================================\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        form.resetFields()\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const [form] = Form.useForm() //重置表单里的值=========================================================\r\n\r\n    let onFinish = (value) => {\r\n        console.log(value);\r\n        dispatch(addUser({\r\n            username: value.username,\r\n            password: value.password,\r\n            email: value.email,\r\n            mobile: value.mobile,\r\n            pagenum: pagenum,\r\n            pagesize: pagesize,\r\n            query: query\r\n        }))\r\n        setIsModalVisible(false)\r\n        form.resetFields()\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            dataIndex: 'key',\r\n            key: 'key',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'username',\r\n            key: 'id',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: '角色',\r\n            dataIndex: 'role_name',\r\n            key: 'id',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: '电话',\r\n            dataIndex: 'mobile',\r\n            key: 'id',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: '邮箱',\r\n            dataIndex: 'email',\r\n            key: 'id',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: '状态',\r\n            key: 'id',\r\n            align: 'center',\r\n            render: (user) => (\r\n                <Switch defaultChecked={user.mg_state} onChange={(e) => onChange(user, e)} />\r\n            )\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'id',\r\n            align: 'center',\r\n            render: (text) => (\r\n                <Space size=\"middle\">\r\n\r\n                    {/* 编辑用户 */}\r\n                    <Button type=\"primary\" icon={<EditOutlined />} onClick={() => edit(text)}></Button>\r\n                    {/* 删除按钮 */}\r\n                    <Popconfirm\r\n                        title=\"此操作将永久删除该角色, 是否继续??\"\r\n                        onConfirm={() => confirm(text)}\r\n                        onCancel={cancel}\r\n                        okText=\"确认\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <a href=\"#\">\r\n                            <Button type=\"danger\" icon={<DeleteOutlined />}></Button>\r\n                        </a>\r\n                    </Popconfirm>\r\n                    <Button type=\"text\" icon={<SettingOutlined />}></Button>\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n    ];\r\n\r\n    //编辑角色=========================================================================\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    let edit = (text) => {\r\n        console.log(text);\r\n        setIds(text.id)\r\n        setVisible(true);\r\n        form.setFieldsValue({\r\n            user: text.username,\r\n            emails: text.email,\r\n            phone: text.mobile\r\n        })\r\n    }\r\n\r\n\r\n    const canceled = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    let onSure = (value) => {\r\n        dispatch(editUser({\r\n            id: ids,\r\n            email: value.emails,\r\n            mobile: value.phone,\r\n        }))\r\n        setVisible(false);\r\n    }\r\n\r\n    //修改状态========================================================================\r\n    let onChange = (user, e) => {\r\n        dispatch(modifyUsers({\r\n            uId: user.id,\r\n            type: e\r\n        }))\r\n    }\r\n    //确认删除===============================================================================\r\n    function confirm(text) {\r\n        console.log(text);\r\n        dispatch(delUser({\r\n            id: text.id,\r\n            pagenum: pagenum,\r\n            pagesize: pagesize,\r\n            query: query\r\n        }))\r\n    }\r\n\r\n    function cancel() {\r\n        message.info('取消删除')\r\n    }\r\n\r\n    let data = users.users\r\n\r\n    let back = () => {\r\n        setVisible(false);\r\n    }\r\n\r\n    let comeBack = () => {\r\n        setIsModalVisible(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <Card style={{\r\n                width: '100%',\r\n            }}>\r\n                <div>\r\n                    {/* 搜索框 */}\r\n                    <Space direction=\"vertical\">\r\n                        <Search placeholder=\"请输入搜索内容\" allowClear onSearch={onSearch} style={{ width: 400 }} />\r\n                    </Space>,\r\n\r\n                {/* 按钮 */}\r\n                    <Button type=\"primary\" className=\"pr\" onClick={showModal} style={{\r\n                        top: '5px',\r\n                        left: 30\r\n                    }}>\r\n                        添加用户\r\n                     </Button>\r\n                </div>\r\n            </Card>,\r\n\r\n            {/* 添加用户弹出的Modal框 */}\r\n            <Modal title=\"添加用户\" okText=\"确定\" cancelText=\"取消\" footer={false} visible={isModalVisible} onCancel={handleCancel}>\r\n                <Form\r\n                    form={form}\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{ remember: true }}\r\n                    validateTrigger=\"onBlur\"\r\n                    onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        label=\"用户名\"\r\n                        name=\"username\"\r\n                        rules={[{ required: true, message: '用户名不能为空' },\r\n                        {\r\n                            type: \"string\",\r\n                            message: \"请输入正确的用户名\",\r\n                            trigger: \"blur\",\r\n                            transform(value) {\r\n                                if (! /^[a-zA-Z0-9]{6,16}$/.test(value)) {\r\n                                    return true;\r\n                                }\r\n                            },\r\n                        },\r\n                    ]}\r\n                    >\r\n                        <Input allowClear />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"密码\"\r\n                        name=\"password\"\r\n                        rules={[{ required: true, message: '密码不能为空' },\r\n                        {\r\n                            type: \"string\",\r\n                            message: \"请输入正确的密码\",\r\n                            trigger: \"blur\",\r\n                            transform(value) {\r\n                                if (/^[0-9A-Za-z_-]{6-16}$/.test(value)) {\r\n                                    return true;\r\n                                }\r\n                            },\r\n                        },]}\r\n                    >\r\n                        <Input.Password allowClear />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"邮箱\"\r\n                        name=\"email\"\r\n                        rules={[{ required: true, message: '邮箱不能为空' },\r\n                        {\r\n                            type: \"string\",\r\n                            message: \"请输入正确的邮箱\",\r\n                            trigger: \"blur\",\r\n                            transform(value) {\r\n                                if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(value)) {\r\n                                    return true;\r\n                                }\r\n                            },\r\n                        },\r\n                    ]}\r\n                    >\r\n                        <Input allowClear />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"电话\"\r\n                        name=\"mobile\"\r\n                        rules={[{ required: true, message: '电话不能为空' },\r\n                        {\r\n                            type: \"string\",\r\n                            message: \"请输入正确的电话号码\",\r\n                            trigger: \"blur\",\r\n                            transform(value) {\r\n                                if (!/^1[345789]\\d{9}$/.test(value)) {\r\n                                    return true;\r\n                                }\r\n                            },\r\n                        },\r\n                    ]}\r\n                    >\r\n                        <Input allowClear />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <div style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-around'\r\n                        }}>\r\n                            <div><Button onClick={comeBack}>取消</Button></div>\r\n                            <div><Button type=\"primary\" htmlType=\"submit\">确定</Button></div>\r\n                        </div>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n            </Modal>\r\n\r\n\r\n            {/* 编辑角色弹出的Modal框 */}\r\n            <Modal title=\"编辑用户\" visible={visible} okText=\"确定\" cancelText=\"取消\" footer={false} onCancel={canceled}>\r\n                <Form\r\n                    form={form}\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{ remember: true }}\r\n                    validateTrigger=\"onBlur\"\r\n                    onFinish={onSure}\r\n                >\r\n                    <Form.Item\r\n                        label=\"用户名\"\r\n                        name=\"user\"\r\n                    >\r\n                        <Input disabled />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"邮箱\"\r\n                        name=\"emails\"\r\n                        rules={[{ required: true, message: '邮箱不能为空' },\r\n                        {\r\n                            type: \"string\",\r\n                            message: \"请输入正确的邮箱\",\r\n                            trigger: \"blur\",\r\n                            transform(value) {\r\n                                if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(value)) {\r\n                                    return true;\r\n                                }\r\n                            },\r\n                        },\r\n                    ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"电话\"\r\n                        name=\"phone\"\r\n                        rules={[{ required: true, message: '电话不能为空' },\r\n                        {\r\n                            type: \"string\",\r\n                            message: \"请输入正确的电话号码\",\r\n                            trigger: \"blur\",\r\n                            transform(value) {\r\n                                if (!/^1[345789]\\d{9}$/.test(value)) {\r\n                                    return true;\r\n                                }\r\n                            },\r\n                        },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <div style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-around'\r\n                        }}>\r\n                            <div><Button onClick={back}>取消</Button></div>\r\n                            <div><Button type=\"primary\" htmlType=\"submit\">确定</Button></div>\r\n                        </div>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n            </Modal>\r\n\r\n\r\n            {/* 表格 */}\r\n            <Table columns={columns} rowKey={record => record.id} dataSource={data} />\r\n        </div>\r\n    )\r\n}\r\nexport default Users","C:\\Users\\HS\\Desktop\\love\\src\\views\\rights\\roles.jsx",["163","164","165"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getroles, delRole, editRole,addRoles } from '../../store/actions/rights/rights'\r\nimport { Button, Table, Space, Modal, message, Form, Input, Checkbox } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { confirm } = Modal;\r\n\r\n\r\n\r\nconst Roles = () => {\r\n    let dispatch = useDispatch()\r\n    let [ids, setIds] = useState('') //编辑角色用到的id\r\n    let roles = useSelector(state => state.rights.roles)\r\n    useEffect(() => {\r\n        dispatch(getroles())\r\n    }, [])\r\n\r\n    const [form] = Form.useForm() //\r\n    //表格==================================================================================\r\n    const columns = [\r\n        { title: '#', dataIndex: 'key', key: 'key', align: \"center\" },\r\n        { title: '职位', dataIndex: 'roleName', key: 'roleName', align: \"center\" },\r\n        { title: '描述', dataIndex: 'roleDesc', key: 'roleDesc', align: \"center\" },\r\n        {\r\n            title: '操作',\r\n            key: 'id',\r\n            align: \"center\",\r\n            render: (text) => (\r\n                <Space size=\"small\">\r\n                    <Button type=\"primary\" onClick={() => showModal(text)}>编辑</Button>\r\n                    <Button onClick={() => showConfirm(text)} type=\"primary\" danger>删除</Button>\r\n                    <Button type=\"primary\" type=\"dashed\">分配权限</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const data = roles\r\n\r\n    // 删除角色==============================================================\r\n    function showConfirm(text) {\r\n        confirm({\r\n            title: '此操作将永久删除该角色，是否继续?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            onOk() {\r\n                console.log(text);\r\n                dispatch(delRole({ id: text.id }))\r\n            },\r\n            onCancel() {\r\n                message.info('您取消了删除')\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    //编辑=======================================================================================\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = (text) => {\r\n        setIsModalVisible(true);\r\n        setIds(text.id)\r\n        form.setFieldsValue({\r\n            roleName: text.roleName\r\n        })\r\n    };\r\n    // 弹出框取消按钮\r\n    let cancelText = () => {\r\n        setIsModalVisible(false);\r\n        message.info('您取消了编辑')\r\n    }\r\n\r\n    const layout = {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 20 },\r\n    };\r\n    //发请求=============================================================================================\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        console.log(ids);\r\n        dispatch(editRole({\r\n            id: ids,\r\n            roleName: values.roleName,\r\n            roleDesc: values.roleDescribe\r\n        }))\r\n        form.resetFields()\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n\r\n    //添加角色=============================================================================================================\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const showModal1 = () => {\r\n        setVisible(true);\r\n    };\r\n\r\n\r\n    const onFinished = (values) => {\r\n        console.log('Success:', values);\r\n        dispatch(addRoles({ \r\n            roleName:values.rolesName,\r\n            roleDesc:values.roleDesc\r\n        }))\r\n        setVisible(false);\r\n        form.resetFields()\r\n    };\r\n\r\n    //取消按钮=====================================================================================================\r\n    let back=()=>{\r\n        setVisible(false); \r\n        form.resetFields()\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* 按钮 */}\r\n            <Button type=\"primary\" size=\"large\" onClick={showModal1}>\r\n                添加角色\r\n            </Button>\r\n\r\n            {/* 添加角色弹出框 */}\r\n\r\n            <Modal title=\"添加角色\" visible={visible} footer={null} closable={false} >\r\n\r\n                <Form\r\n                    {...layout}\r\n                    form={form}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={onFinished}\r\n                    validateTrigger=\"onBlur\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"角色名\"\r\n                        name=\"rolesName\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '角色名不能为空',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"角色描述\"\r\n                        name=\"roleDesc\"\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item >\r\n                    <div style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-around'\r\n                        }}>\r\n                            <div><Button block onClick={back}>取消</Button></div>\r\n                            <div><Button type=\"primary\" htmlType=\"submit\">确定</Button></div>\r\n                        </div>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n            </Modal>\r\n\r\n            {/* 表格 */}\r\n            <Table\r\n                style={{\r\n                    marginTop: 30\r\n                }}\r\n                columns={columns}\r\n                expandable={{\r\n                    expandedRowRender: record => <p style={{ margin: 0 }}>{record.description}</p>,\r\n                    rowExpandable: record => record.name !== 'Not Expandable',\r\n                }}\r\n                dataSource={data} keyboard closable\r\n            />,\r\n\r\n            {/* 编辑弹出框 ========================================*/}\r\n            <Modal title=\"编辑角色\" visible={isModalVisible} closable={false} footer={null} >\r\n                <Form\r\n                    form={form}\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{ remember: true }}\r\n                    validateTrigger=\"onBlur\"\r\n                    onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        label=\"角色名\"\r\n                        name=\"roleName\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '角色名不能为空!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"角色描述\"\r\n                        name=\"roleDescribe\"\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item >\r\n                        <div style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-around'\r\n                        }}>\r\n                            <div><Button block onClick={cancelText}>取消</Button></div>\r\n                            <div><Button type=\"primary\" htmlType=\"submit\">确定</Button></div>\r\n                        </div>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default Roles","C:\\Users\\HS\\Desktop\\love\\src\\views\\rights\\rights.jsx",["166"],"import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getPower } from '../../store/actions/rights/rights'\r\nimport { Table, Tag } from 'antd';\r\n\r\n\r\nconst Rights = () => {\r\n    let right = useSelector(state => state.rights.power)\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            dataIndex: 'key',\r\n            key: 'key',\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: '权限名称',\r\n            dataIndex: 'authName',\r\n            key: 'authName',\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: '权限等级',\r\n            dataIndex: 'level',\r\n            key: 'level',\r\n            align: 'center',\r\n            render: (level) => (\r\n                level === '0' ? <Tag color=\"magenta\">一级</Tag> : (level === '1' ? <Tag color=\"lime\">二级</Tag> : <Tag color=\"purple\">三级</Tag>)\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const data = right\r\n    \r\n    let dispatch = useDispatch()\r\n    const type = \"list\"\r\n    useEffect(() => {\r\n        dispatch(getPower({ type: type }))\r\n    }, [])\r\n    return (\r\n        <div\r\n            style={{\r\n                padding: 10,\r\n                margin: 10,\r\n            }}>\r\n            <Table columns={columns} dataSource={data} pagination={false} />\r\n        </div>\r\n    )\r\n}\r\nexport default Rights","C:\\Users\\HS\\Desktop\\love\\src\\views\\goods\\goods.jsx",["167"],"import React, { useEffect, useState } from 'react'\r\nimport { getGoods ,delGoods} from '../../store/actions/goods/goods'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Input, Button, Table, Pagination, Modal, Form, message } from 'antd';\r\nimport { EditOutlined, DeleteOutlined,ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nconst Goods = () => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const { confirm } = Modal;\r\n\r\n    // 搜索商品===================================================================================\r\n    const onSearch = value => {\r\n        dispatch(getGoods({\r\n            pagenum: 1,\r\n            pagesize: 10,\r\n            query: value\r\n        }))\r\n    }\r\n    let dispatch = useDispatch()\r\n    useEffect(() => {\r\n       \r\n        dispatch(getGoods({ pagenum: 1, pagesize: 10, query: '' }))\r\n    }, [])\r\n    let goods = useSelector(state => state.goods.goods)\r\n\r\n    //表格========================================================================================\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            dataIndex: 'key',\r\n            key: 'key',\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: '商品名称',\r\n            dataIndex: 'goods_name',\r\n            key: 'goods_name',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: '商品价格',\r\n            dataIndex: 'goods_price',\r\n            key: 'goods_price',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: '商品重量',\r\n            dataIndex: 'goods_weight',\r\n            key: 'goods_weight',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'timer',\r\n            key: 'timer',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'goods_id',\r\n            align: 'center',\r\n            render: text => (\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-around'\r\n                }}>\r\n                    <Button type=\"primary\" onClick={() => showModal(text)} icon={<EditOutlined />} />\r\n                    <Button type=\"primary\" danger onClick={()=>showPromiseConfirm(text)} icon={<DeleteOutlined />} />\r\n                </div>\r\n            )\r\n        },\r\n\r\n\r\n    ];\r\n\r\n    const data = goods.goods\r\n    //编辑Modal=====================================================================================\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    //编辑按钮======================================================================================\r\n    const showModal = (text) => {\r\n        setIsModalVisible(true);\r\n        console.log(text);\r\n        form.setFieldsValue({\r\n            goods_name: text.goods_name,\r\n            goods_price: text.goods_price,\r\n            goods_number: text.goods_number,\r\n            goods_weight: text.goods_weight,\r\n        })\r\n    };\r\n    //提交表单且数据验证成功后回调事件\r\n    let onFinish = (value) => {\r\n        console.log(value);\r\n        setIsModalVisible(false);\r\n    }\r\n\r\n    //取消按钮======================\r\n    let cancel=()=>{\r\n        message.info('您取消了编辑')\r\n        setIsModalVisible(false);\r\n    }\r\n    //删除商品===============================================================================\r\n    function showPromiseConfirm(text) {\r\n        confirm({\r\n          title: '提示',\r\n          icon: <ExclamationCircleOutlined />,\r\n          content: '此操作将永久删除该商品, 是否继续?',\r\n          onOk() {\r\n            console.log(text);\r\n            dispatch(delGoods({ id:text.goods_id ,pagenum: 1, pagesize: 10, query: '' }))\r\n          },\r\n          onCancel() {\r\n              message.info('您取消了删除')\r\n          },\r\n        });\r\n      }\r\n\r\n    //改编页码===============================================================================\r\n    let onChange = (page, pageSize) => {\r\n        console.log(page, pageSize);\r\n        dispatch(getGoods({ pagenum: page, pagesize: pageSize, query: '' }))\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* 搜索框和添加商品 */}\r\n            <div style={{\r\n                display: 'flex',\r\n                width: 500,\r\n                margin: '30px 0'\r\n            }}>\r\n                <Search placeholder=\"请输入搜索内容\" allowClear onSearch={onSearch} enterButton size='large' />\r\n                <Button type=\"primary\" size='large' style={{\r\n                    marginLeft: '40px',\r\n                }}>添加商品</Button>\r\n            </div>\r\n\r\n\r\n            {/* 表格 */}\r\n            <div>\r\n                <Table columns={columns} pagination={false} bordered dataSource={data} />\r\n            </div>\r\n\r\n            {/* 分页 */}\r\n            <div style={{\r\n                marginTop: '30px'\r\n            }}>\r\n                <Pagination\r\n                    total={goods.total}\r\n                    pageSizeOptions={[10, 20, 30, 50]}\r\n                    showSizeChanger\r\n                    showQuickJumper\r\n                    onChange={onChange}\r\n                    showTotal={total => `共 ${total}条`}\r\n                />\r\n            </div>\r\n\r\n            {/* 编辑弹出框 */}\r\n            <div>\r\n                <Modal title=\"编辑商品\" visible={isModalVisible} centered keyboard footer={null} maskClosable={false} closable={false}>\r\n\r\n                    <Form\r\n                        name=\"basic\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={onFinish}\r\n                        validateTrigger=\"onBlur\"\r\n                        form={form}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"商品名称\"\r\n                            name=\"goods_name\"\r\n                            rules={[{ required: true, message: '商品名称不能为空!' }]}\r\n                        >\r\n                            <Input allowClear />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"商品价格\"\r\n                            name=\"goods_price\"\r\n                            rules={[{ required: true, message: '商品价格不能为空!' }]}\r\n                        >\r\n                            <Input type=\"number\" allowClear />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"商品数量\"\r\n                            name=\"goods_number\"\r\n                            rules={[{ required: true, message: '商品数量不能为空!' }]}\r\n                        >\r\n                            <Input type=\"number\" allowClear />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"商品重量\"\r\n                            name=\"goods_weight\"\r\n                            rules={[{ required: true, message: '商品重量不能为空!' }]}\r\n                        >\r\n                            <Input type=\"number\" allowClear />\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item>\r\n\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                justifyContent: 'space-around'\r\n                            }}>\r\n                                <div> <Button type=\"primary\" onClick={cancel}>取消</Button></div>\r\n                                <div> <Button type=\"primary\" htmlType=\"submit\">确定</Button></div>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Goods","C:\\Users\\HS\\Desktop\\love\\src\\views\\goods\\params.jsx",["168","169","170","171","172","173","174","175"],"C:\\Users\\HS\\Desktop\\love\\src\\views\\goods\\categories.jsx",["176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"C:\\Users\\HS\\Desktop\\love\\src\\views\\orders\\orders.jsx",["190"],"import React, { useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getOrder } from '../../store/actions/orders/orders'\r\nimport { Button, Input, Space, Table, Tag, Pagination } from 'antd';\r\nimport { DownCircleOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\nconst { Search } = Input;\r\n\r\nconst Orders = () => {\r\n    let dispatch = useDispatch()\r\n    //获取发请求得到的值============================================================\r\n    let order = useSelector(state => state.orders.orders)\r\n    useEffect(() => {\r\n        //获取初始值===============================================================\r\n        dispatch(getOrder({ pagenum: 1, pagesize: 10, query: '' }))\r\n    }, [])\r\n\r\n    //搜索框搜索=============================================================================\r\n    const onSearch = value => {\r\n        console.log(value)\r\n    }\r\n\r\n    //分页=================================================================================\r\n \r\n    let onChange=(page, pageSize) => {\r\n        dispatch(getOrder({ pagenum: page, pagesize: pageSize, query: '' }))\r\n    };\r\n\r\n    //上一页下一页\r\n    let itemRender=(current, type, originalElement)=>{\r\n        if (type === 'prev') {\r\n            return '上一页';\r\n          }\r\n          if (type === 'next') {\r\n            return '下一页';\r\n          }\r\n          return originalElement;\r\n    }\r\n\r\n    //表格================================================================================\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            dataIndex: 'key',\r\n            key: 'key',\r\n            align: \"center\"\r\n        },\r\n        {\r\n            title: '订单编号',\r\n            dataIndex: 'order_number',\r\n            key: 'order_number',\r\n            align: \"center\"\r\n        },\r\n        {\r\n            title: '订单价格',\r\n            dataIndex: 'order_price',\r\n            key: 'order_price',\r\n            align: \"center\"\r\n        },\r\n        {\r\n            title: '是否付款',\r\n            key: 'pay_status',\r\n            dataIndex: 'pay_status',\r\n            align: \"center\",\r\n            render: (text) => (\r\n                text === '0' ? <Tag color=\"red\" >已付款</Tag> : <Tag color=\"geekblue\">未付款</Tag>\r\n            )\r\n        },\r\n        {\r\n            title: '是否发获',\r\n            dataIndex: 'is_send',\r\n            key: 'is_send',\r\n            align: \"center\"\r\n        },\r\n        {\r\n            title: '下单时间',\r\n            key: 'timer',\r\n            dataIndex: 'timer',\r\n            align: \"center\",\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'action',\r\n            align: \"center\",\r\n            render: () => (\r\n                <Space size=\"middle\">\r\n                    <Button type=\"primary\" icon={<EditOutlined />} />\r\n                    <Button type=\"primary\" danger icon={<DownCircleOutlined />} />\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    let data = order.goods;\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* 搜索按钮 */}\r\n            <div style={{\r\n                margin: 10\r\n            }}>\r\n                <Space direction=\"vertical\">\r\n                    <Search placeholder=\"请输入搜索类容\" onSearch={onSearch} enterButton />\r\n                </Space >\r\n            </div>\r\n            {/* 表格 */}\r\n            <div>\r\n                <Table columns={columns} dataSource={data} bordered pagination={false} />\r\n            </div>\r\n            {/* 分页 */}\r\n            <div>\r\n                <Pagination\r\n                    total={order.total}\r\n                    showSizeChanger\r\n                    showQuickJumper\r\n                    itemRender={itemRender}\r\n                    onChange={onChange}\r\n                    responsive\r\n                    // pageSizeOptions={5,10,15,30}\r\n                    showTotal={total => `共 ${total} 条`}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Orders","C:\\Users\\HS\\Desktop\\love\\src\\views\\reports\\reports.jsx",["191","192"],"import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getData } from '../../store/actions/data/data'\r\n\r\nconst Reports = () => {\r\n    let dispatch = useDispatch()\r\n    let data = useSelector(state => state.data.data)\r\n    useEffect(() => {\r\n        dispatch(getData())\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div id=\"myChart\" style={{ width: '1200px', height: '500px' }}></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Reports","C:\\Users\\HS\\Desktop\\love\\src\\store\\reducers\\rights\\rights.js",[],"C:\\Users\\HS\\Desktop\\love\\src\\store\\actions\\rights\\rights.js",["193","194"],"import api from '../../../http/api'\r\nimport { message } from 'antd'\r\n\r\n\r\n//获取角色列表===============================================\r\nexport function getroles() {\r\n    return async(dispatch) => {\r\n        let res = await api.getroles()\r\n        if (res.meta.status === 200) {\r\n            res.data.map((item, index) => {\r\n                item.key = index + 1\r\n            })\r\n            console.log(res.data)\r\n            return dispatch({\r\n                type: 'getroles',\r\n                data: res.data\r\n            })\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//添加角色=============================================================、\r\nexport function addRoles(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.addRoles(params)\r\n        if (res.meta.status === 200) {\r\n            message.success(res.meta.msg)\r\n            return dispatch(getroles())\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}\r\n\r\n//删除角色=============================================================、\r\nexport function delRole(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.delRole(params)\r\n        if (res.meta.status === 200) {\r\n            message.success(res.meta.msg)\r\n            return dispatch(getroles())\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}\r\n\r\n//编辑角色=============================================================、\r\nexport function editRole(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.editRole(params)\r\n        if (res.meta.status === 200) {\r\n            message.success(res.meta.msg)\r\n            return dispatch(getroles())\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//获取权限列表=========================================================、\r\nexport function getPower(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.getPower(params)\r\n        if (res.meta.status === 200) {\r\n            res.data.map((item, index) => {\r\n                item.key = index + 1\r\n            })\r\n            console.log(res.data)\r\n            return dispatch({\r\n                type: 'getPower',\r\n                data: res.data\r\n            })\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}","C:\\Users\\HS\\Desktop\\love\\src\\store\\reducers\\orders\\orders.js",[],"C:\\Users\\HS\\Desktop\\love\\src\\store\\actions\\orders\\orders.js",["195"],"import api from '../../../http/api'\r\nimport { message } from 'antd'\r\nimport dayjs from 'dayjs'\r\n\r\n// 获得订单列表===========================================================\r\n\r\nexport function getOrder(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.getOrder(params)\r\n        if (res.meta.status === 200) {\r\n            res.data.goods.map((item, index) => {\r\n                item.key = index + 1\r\n                item.timer = dayjs(item.create_time).format('YYYY-MM-DD  HH:mm:ss')\r\n            })\r\n            console.log(res.data)\r\n            return dispatch({\r\n                type: 'getOrder',\r\n                data: res.data\r\n            })\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}","C:\\Users\\HS\\Desktop\\love\\src\\store\\reducers\\data\\data.js",[],"C:\\Users\\HS\\Desktop\\love\\src\\store\\actions\\data\\data.js",[],"C:\\Users\\HS\\Desktop\\love\\src\\store\\reducers\\goods\\goods.js",[],"C:\\Users\\HS\\Desktop\\love\\src\\store\\actions\\goods\\goods.js",["196","197","198"],"import api from '../../../http/api'\r\nimport { message } from 'antd'\r\nimport dayjs from 'dayjs'\r\n\r\n//获取商品列表=================================================\r\nexport function getGoods(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.getGoods(params)\r\n        if (res.meta.status === 200) {\r\n            res.data.goods.map((item, index) => {\r\n                item.key = index + 1;\r\n                item.timer = dayjs(item.add_time).format('YYYY-MM-DD  HH:mm:ss')\r\n            })\r\n            return dispatch({\r\n                type: 'getGoods',\r\n                data: res.data\r\n            })\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}\r\n//删除商品=============================================================\r\nexport function delGoods(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.delGoods(params)\r\n        if (res.meta.status === 200) {\r\n            message.success(res.meta.msg)\r\n            console.log(res.data);\r\n            return dispatch(getGoods(params))\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}\r\n//获取商品分类列表=================================================\r\nexport function goodsList(params) {\r\n    return async(dispatch) => {\r\n        let res = await api.goodsList(params)\r\n        if (res.meta.status === 200) {\r\n            res.data.result.map((item, index) => {\r\n                item.key = index + 1;\r\n                if (item.children && item.children.length) {\r\n                    item.children.map((child, index1) => {\r\n                        child.key = index1 + 1\r\n                    })\r\n                }\r\n            })\r\n\r\n            console.log(res.data)\r\n            return dispatch({\r\n                type: 'goodsList',\r\n                data: res.data\r\n            })\r\n        } else {\r\n            message.error(res.meta.msg)\r\n        }\r\n    }\r\n}","C:\\Users\\HS\\Desktop\\love\\src\\hooks\\useWatch.js",["199"],"import { useEffect } from 'react'\r\n\r\n\r\nexport function useWatch(data, callback) { //data 监听的数据 callback回调函数\r\n    useEffect(() => {\r\n            callback() //执行callback()\r\n        }, [data]) //传入data\r\n} //第十步","C:\\Users\\HS\\Desktop\\love\\src\\hooks\\useStorage.js",["200"],"C:\\Users\\HS\\Desktop\\love\\src\\hooks\\useComputed.js",["201"],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":1,"column":28,"nodeType":"208","messageId":"209","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"211","line":75,"column":6,"nodeType":"212","endLine":75,"endColumn":8,"suggestions":"213"},{"ruleId":"206","severity":1,"message":"214","line":55,"column":10,"nodeType":"208","messageId":"209","endLine":55,"endColumn":14},{"ruleId":"215","severity":1,"message":"216","line":93,"column":25,"nodeType":"217","endLine":100,"endColumn":26},{"ruleId":"218","severity":1,"message":"219","line":30,"column":31,"nodeType":"220","messageId":"221","endLine":30,"endColumn":33},{"ruleId":"218","severity":1,"message":"219","line":31,"column":40,"nodeType":"220","messageId":"221","endLine":31,"endColumn":42},{"ruleId":"218","severity":1,"message":"219","line":37,"column":45,"nodeType":"220","messageId":"221","endLine":37,"endColumn":47},{"ruleId":"218","severity":1,"message":"219","line":38,"column":46,"nodeType":"220","messageId":"221","endLine":38,"endColumn":48},{"ruleId":"218","severity":1,"message":"219","line":65,"column":46,"nodeType":"220","messageId":"221","endLine":65,"endColumn":48},{"ruleId":"222","severity":1,"message":"223","line":2,"column":1,"nodeType":"224","endLine":105,"endColumn":2},{"ruleId":"210","severity":1,"message":"225","line":27,"column":8,"nodeType":"212","endLine":27,"endColumn":10,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":124,"column":25,"nodeType":"217","endLine":124,"endColumn":37},{"ruleId":"206","severity":1,"message":"229","line":4,"column":61,"nodeType":"208","messageId":"209","endLine":4,"endColumn":69},{"ruleId":"210","severity":1,"message":"211","line":17,"column":8,"nodeType":"212","endLine":17,"endColumn":10,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":33,"column":44,"nodeType":"233","endLine":33,"endColumn":57},{"ruleId":"210","severity":1,"message":"211","line":39,"column":8,"nodeType":"212","endLine":39,"endColumn":10,"suggestions":"234"},{"ruleId":"210","severity":1,"message":"211","line":29,"column":8,"nodeType":"212","endLine":29,"endColumn":10,"suggestions":"235"},{"ruleId":"206","severity":1,"message":"236","line":1,"column":27,"nodeType":"208","messageId":"209","endLine":1,"endColumn":36},{"ruleId":"206","severity":1,"message":"237","line":1,"column":38,"nodeType":"208","messageId":"209","endLine":1,"endColumn":45},{"ruleId":"206","severity":1,"message":"238","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":18},{"ruleId":"206","severity":1,"message":"239","line":27,"column":11,"nodeType":"208","messageId":"209","endLine":27,"endColumn":18},{"ruleId":"206","severity":1,"message":"240","line":27,"column":29,"nodeType":"208","messageId":"209","endLine":27,"endColumn":39},{"ruleId":"206","severity":1,"message":"241","line":27,"column":41,"nodeType":"208","messageId":"209","endLine":27,"endColumn":46},{"ruleId":"206","severity":1,"message":"242","line":38,"column":13,"nodeType":"208","messageId":"209","endLine":38,"endColumn":19},{"ruleId":"206","severity":1,"message":"243","line":39,"column":13,"nodeType":"208","messageId":"209","endLine":39,"endColumn":17},{"ruleId":"206","severity":1,"message":"244","line":4,"column":18,"nodeType":"208","messageId":"209","endLine":4,"endColumn":23},{"ruleId":"206","severity":1,"message":"245","line":4,"column":25,"nodeType":"208","messageId":"209","endLine":4,"endColumn":30},{"ruleId":"206","severity":1,"message":"246","line":4,"column":32,"nodeType":"208","messageId":"209","endLine":4,"endColumn":36},{"ruleId":"206","severity":1,"message":"247","line":4,"column":38,"nodeType":"208","messageId":"209","endLine":4,"endColumn":46},{"ruleId":"206","severity":1,"message":"248","line":4,"column":48,"nodeType":"208","messageId":"209","endLine":4,"endColumn":53},{"ruleId":"206","severity":1,"message":"249","line":5,"column":10,"nodeType":"208","messageId":"209","endLine":5,"endColumn":22},{"ruleId":"210","severity":1,"message":"211","line":24,"column":8,"nodeType":"212","endLine":24,"endColumn":10,"suggestions":"250"},{"ruleId":"206","severity":1,"message":"251","line":26,"column":19,"nodeType":"208","messageId":"209","endLine":26,"endColumn":30},{"ruleId":"206","severity":1,"message":"252","line":27,"column":18,"nodeType":"208","messageId":"209","endLine":27,"endColumn":28},{"ruleId":"206","severity":1,"message":"253","line":28,"column":16,"nodeType":"208","messageId":"209","endLine":28,"endColumn":24},{"ruleId":"206","severity":1,"message":"254","line":40,"column":11,"nodeType":"208","messageId":"209","endLine":40,"endColumn":18},{"ruleId":"206","severity":1,"message":"255","line":55,"column":13,"nodeType":"208","messageId":"209","endLine":55,"endColumn":23},{"ruleId":"206","severity":1,"message":"256","line":55,"column":25,"nodeType":"208","messageId":"209","endLine":55,"endColumn":31},{"ruleId":"206","severity":1,"message":"257","line":62,"column":11,"nodeType":"208","messageId":"209","endLine":62,"endColumn":15},{"ruleId":"210","severity":1,"message":"211","line":16,"column":8,"nodeType":"212","endLine":16,"endColumn":10,"suggestions":"258"},{"ruleId":"206","severity":1,"message":"257","line":7,"column":9,"nodeType":"208","messageId":"209","endLine":7,"endColumn":13},{"ruleId":"210","severity":1,"message":"211","line":10,"column":8,"nodeType":"212","endLine":10,"endColumn":10,"suggestions":"259"},{"ruleId":"218","severity":1,"message":"219","line":10,"column":40,"nodeType":"220","messageId":"221","endLine":10,"endColumn":42},{"ruleId":"218","severity":1,"message":"219","line":70,"column":40,"nodeType":"220","messageId":"221","endLine":70,"endColumn":42},{"ruleId":"218","severity":1,"message":"219","line":11,"column":46,"nodeType":"220","messageId":"221","endLine":11,"endColumn":48},{"ruleId":"218","severity":1,"message":"219","line":10,"column":46,"nodeType":"220","messageId":"221","endLine":10,"endColumn":48},{"ruleId":"218","severity":1,"message":"219","line":41,"column":47,"nodeType":"220","messageId":"221","endLine":41,"endColumn":49},{"ruleId":"218","severity":1,"message":"219","line":44,"column":55,"nodeType":"220","messageId":"221","endLine":44,"endColumn":57},{"ruleId":"210","severity":1,"message":"260","line":7,"column":12,"nodeType":"212","endLine":7,"endColumn":18,"suggestions":"261"},{"ruleId":"206","severity":1,"message":"257","line":22,"column":13,"nodeType":"208","messageId":"209","endLine":22,"endColumn":17},{"ruleId":"210","severity":1,"message":"262","line":6,"column":12,"nodeType":"208","endLine":6,"endColumn":19,"suggestions":"263"},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["266"],"'flag' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch', 'pagenum', 'pagesize', and 'query'. Either include them or remove the dependency array.",["267"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Checkbox' is defined but never used.",["268"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["269"],["270"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useWatch' is defined but never used.","'setItem' is assigned a value but never used.","'removeItem' is assigned a value but never used.","'clear' is assigned a value but never used.","'number' is assigned a value but never used.","'name' is assigned a value but never used.","'Table' is defined but never used.","'Badge' is defined but never used.","'Menu' is defined but never used.","'Dropdown' is defined but never used.","'Space' is defined but never used.","'DownOutlined' is defined but never used.",["271"],"'setPagesize' is assigned a value but never used.","'setPagenum' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'columns' is assigned a value but never used.","'tableProps' is assigned a value but never used.","'search' is assigned a value but never used.","'data' is assigned a value but never used.",["272"],["273"],"React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["274"],"React Hook useMemo has a missing dependency: 'callback'. Either include it or remove the dependency array.",["275"],"no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"276","fix":"280"},{"desc":"276","fix":"281"},{"desc":"276","fix":"282"},{"desc":"276","fix":"283"},{"desc":"276","fix":"284"},{"desc":"276","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [dispatch]",{"range":"290","text":"291"},"Update the dependencies array to be: [dispatch, pagenum, pagesize, query]",{"range":"292","text":"293"},{"range":"294","text":"291"},{"range":"295","text":"291"},{"range":"296","text":"291"},{"range":"297","text":"291"},{"range":"298","text":"291"},{"range":"299","text":"291"},"Update the dependencies array to be: [callback, data]",{"range":"300","text":"301"},"Update the dependencies array to be: [callback]",{"range":"302","text":"303"},[2181,2183],"[dispatch]",[872,874],"[dispatch, pagenum, pagesize, query]",[608,610],[1089,1091],[880,882],[661,663],[704,706],[329,331],[182,188],"[callback, data]",[115,119],"[callback]"]